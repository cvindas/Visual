<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>